{"ast":null,"code":"/*!\n * jquery.counterup.js 2.1.0\n *\n * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\n * Released under the GPL v2 License\n *\n * Amended by Jeremy Paris, Ciro Mattia Gonano and others\n *\n * Date: Feb 24, 2017\n */\n(function ($) {\n  \"use strict\";\n\n  $.fn.counterUp = function (options) {\n    // Defaults\n    var settings = $.extend({\n        'time': 400,\n        'delay': 10,\n        'offset': 100,\n        'beginAt': 0,\n        'formatter': false,\n        'context': 'window',\n        callback: function () {}\n      }, options),\n      s;\n    return this.each(function () {\n      // Store the object\n      var $this = $(this),\n        counter = {\n          time: $(this).data('counterup-time') || settings.time,\n          delay: $(this).data('counterup-delay') || settings.delay,\n          offset: $(this).data('counterup-offset') || settings.offset,\n          beginAt: $(this).data('counterup-beginat') || settings.beginAt,\n          context: $(this).data('counterup-context') || settings.context\n        };\n      var counterUpper = function () {\n        var nums = [];\n        var divisions = counter.time / counter.delay;\n        var num = $(this).attr('data-num') ? $(this).attr('data-num') : $this.text();\n        var isComma = /[0-9]+,[0-9]+/.test(num);\n        num = num.replace(/,/g, '');\n        var decimalPlaces = (num.split('.')[1] || []).length;\n        if (counter.beginAt > num) counter.beginAt = num;\n        var isTime = /[0-9]+:[0-9]+:[0-9]+/.test(num);\n\n        // Convert time to total seconds\n        if (isTime) {\n          var times = num.split(':'),\n            m = 1;\n          s = 0;\n          while (times.length > 0) {\n            s += m * parseInt(times.pop(), 10);\n            m *= 60;\n          }\n        }\n\n        // Generate list of incremental numbers to display\n        for (var i = divisions; i >= counter.beginAt / num * divisions; i--) {\n          var newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\n\n          // Add incremental seconds and convert back to time\n          if (isTime) {\n            newNum = parseInt(s / divisions * i);\n            var hours = parseInt(newNum / 3600) % 24;\n            var minutes = parseInt(newNum / 60) % 60;\n            var seconds = parseInt(newNum % 60, 10);\n            newNum = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n          }\n\n          // Preserve commas if input had commas\n          if (isComma) {\n            while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\n              newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\n            }\n          }\n          if (settings.formatter) {\n            newNum = settings.formatter.call(this, newNum);\n          }\n          nums.unshift(newNum);\n        }\n        $this.data('counterup-nums', nums);\n        $this.text(counter.beginAt);\n\n        // Updates the number until we're done\n        var f = function () {\n          if (!$this.data('counterup-nums')) {\n            settings.callback.call(this);\n            return;\n          }\n          $this.html($this.data('counterup-nums').shift());\n          if ($this.data('counterup-nums').length) {\n            setTimeout($this.data('counterup-func'), counter.delay);\n          } else {\n            $this.data('counterup-nums', null);\n            $this.data('counterup-func', null);\n            settings.callback.call(this);\n          }\n        };\n        $this.data('counterup-func', f);\n\n        // Start the count up\n        setTimeout($this.data('counterup-func'), counter.delay);\n      };\n\n      // Perform counts when the element gets into view\n      $this.waypoint(function (direction) {\n        counterUpper();\n        this.destroy(); //-- Waypoint 3.0 version of triggerOnce\n      }, {\n        offset: counter.offset + \"%\",\n        context: counter.context\n      });\n    });\n  };\n})(jQuery);","map":{"version":3,"names":["$","fn","counterUp","options","settings","extend","callback","s","each","$this","counter","time","data","delay","offset","beginAt","context","counterUpper","nums","divisions","num","attr","text","isComma","test","replace","decimalPlaces","split","length","isTime","times","m","parseInt","pop","i","newNum","parseFloat","toFixed","hours","minutes","seconds","toString","formatter","call","unshift","f","html","shift","setTimeout","waypoint","direction","destroy","jQuery"],"sources":["C:/Users/Ajith Chandran/OneDrive/Desktop/SHILPA/React/hello-world/node_modules/jquery.counterup/jquery.counterup.js"],"sourcesContent":["/*!\n * jquery.counterup.js 2.1.0\n *\n * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\n * Released under the GPL v2 License\n *\n * Amended by Jeremy Paris, Ciro Mattia Gonano and others\n *\n * Date: Feb 24, 2017\n */\n(function ($) {\n    \"use strict\";\n\n    $.fn.counterUp = function (options) {\n\n        // Defaults\n        var settings = $.extend({\n                'time': 400,\n                'delay': 10,\n                'offset': 100,\n                'beginAt': 0,\n                'formatter': false,\n                'context': 'window',\n                callback: function () {\n                }\n            }, options),\n            s;\n\n        return this.each(function () {\n\n            // Store the object\n            var $this = $(this),\n                counter = {\n                    time: $(this).data('counterup-time') || settings.time,\n                    delay: $(this).data('counterup-delay') || settings.delay,\n                    offset: $(this).data('counterup-offset') || settings.offset,\n                    beginAt: $(this).data('counterup-beginat') || settings.beginAt,\n                    context: $(this).data('counterup-context') || settings.context\n                };\n\n            var counterUpper = function () {\n                var nums = [];\n                var divisions = counter.time / counter.delay;\n                var num = $(this).attr('data-num') ? $(this).attr('data-num') : $this.text();\n                var isComma = /[0-9]+,[0-9]+/.test(num);\n                num = num.replace(/,/g, '');\n                var decimalPlaces = (num.split('.')[1] || []).length;\n                if (counter.beginAt > num)\n                    counter.beginAt = num;\n\n                var isTime = /[0-9]+:[0-9]+:[0-9]+/.test(num);\n\n                // Convert time to total seconds\n                if (isTime) {\n                    var times = num.split(':'),\n                        m = 1;\n                    s = 0;\n                    while (times.length > 0) {\n                        s += m * parseInt(times.pop(), 10);\n                        m *= 60;\n                    }\n                }\n\n                // Generate list of incremental numbers to display\n                for (var i = divisions; i >= counter.beginAt / num * divisions; i--) {\n\n                    var newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\n\n                    // Add incremental seconds and convert back to time\n                    if (isTime) {\n                        newNum = parseInt(s / divisions * i);\n                        var hours = parseInt(newNum / 3600) % 24;\n                        var minutes = parseInt(newNum / 60) % 60;\n                        var seconds = parseInt(newNum % 60, 10);\n                        newNum = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n                    }\n\n                    // Preserve commas if input had commas\n                    if (isComma) {\n                        while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\n                            newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\n                        }\n                    }\n                    if (settings.formatter) {\n                        newNum = settings.formatter.call(this, newNum);\n                    }\n                    nums.unshift(newNum);\n                }\n\n                $this.data('counterup-nums', nums);\n                $this.text(counter.beginAt);\n\n                // Updates the number until we're done\n                var f = function () {\n                    if (!$this.data('counterup-nums')) {\n                        settings.callback.call(this);\n                        return;\n                    }\n                    $this.html($this.data('counterup-nums').shift());\n                    if ($this.data('counterup-nums').length) {\n                        setTimeout($this.data('counterup-func'), counter.delay);\n                    } else {\n                        $this.data('counterup-nums', null);\n                        $this.data('counterup-func', null);\n                        settings.callback.call(this);\n                    }\n                };\n                $this.data('counterup-func', f);\n\n                // Start the count up\n                setTimeout($this.data('counterup-func'), counter.delay);\n            };\n\n            // Perform counts when the element gets into view\n            $this.waypoint(function (direction) {\n                counterUpper();\n                this.destroy(); //-- Waypoint 3.0 version of triggerOnce\n            }, {offset: counter.offset + \"%\", context: counter.context});\n        });\n\n    };\n\n})(jQuery);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}